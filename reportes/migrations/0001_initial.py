# Generated by Django 5.2.4 on 2025-08-01 13:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import reportes.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bache', '0001_initial'),
        ('usuario', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reporte',
            fields=[
                ('id_report', models.CharField(default=reportes.models.generar_id_reporte, editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('involucrado_reporte', models.BooleanField(blank=True, default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('fecha_evento', models.DateField(blank=True, null=True)),
                ('dia_evento', models.CharField(blank=True, choices=[('lunes', 'Lunes'), ('martes', 'Martes'), ('miercoles', 'Miercoles'), ('jueves', 'Jueves'), ('viernes', 'Viernes'), ('Sabado', 'Sabado'), ('Domingo', 'Domingo')], default='lunes', max_length=100, null=True)),
                ('hora_evento', models.CharField(blank=True, choices=[('dia', 'Dia (06:00 - 12:00)'), ('tarde', 'Tarde (12:00 - 18:00)'), ('noche', 'Noche (18:00 - 00:00)'), ('madrugada', 'Madrugada (00:00 - 06:00)')], default='madrugada', max_length=100, null=True)),
                ('senializacion_presente', models.BooleanField(blank=True, default=False, null=True)),
                ('estado_problema_vehiculo', models.BooleanField(blank=True, default=False, null=True)),
                ('obstaculo_vial', models.CharField(blank=True, choices=[('Ninguno', 'Ninguno'), ('vehiculo_detenido', 'Vehículo detenido'), ('material_en_via', 'Material en la vía'), ('animal', 'Animal'), ('persona', 'Persona'), ('obra_vial', 'Obra vial'), ('vegetacion', 'Árbol o vegetación')], default='Ninguno', max_length=100, null=True)),
                ('maniobra', models.CharField(blank=True, choices=[('circulaba_normal', 'Circulaba en línea recta'), ('evitar_bache', 'Intentaba evitar el bache'), ('no_vio_bache', 'No vio el bache'), ('giro', 'Giraba a la derecha/izquierda'), ('cambio_carril', 'Cambio de carril'), ('frenado_brusco', 'Frenado brusco por el bache'), ('perdio_control', 'Perdió el control del vehículo'), ('paso_sobre_bache', 'Pasó directamente sobre el bache'), ('retroceso', 'Retrocedía o hacía maniobra en reversa'), ('invasion_sentido', 'Invadía carril contrario'), ('cruce_interseccion', 'Cruzaba intersección')], default='circulaba_normal', max_length=100, null=True)),
                ('velocidad_conduccion', models.CharField(blank=True, choices=[('muy_baja', 'Muy baja (0-20 km/h)'), ('baja', 'Baja (21-40 km/h)'), ('moderada', 'Moderada (41-60 km/h)'), ('alta', 'Alta (61-80 km/h)'), ('muy_alta', 'Muy alta / Excesiva (81+ km/h)')], default='moderada', max_length=100, null=True)),
                ('conductor_estado', models.CharField(blank=True, choices=[('normal', 'En condiciones normales'), ('cansado', 'Cansado o somnoliento'), ('distraido', 'Distraído'), ('alcoholizado', 'Bajo efecto de alcohol'), ('ansioso', 'Ansioso'), ('depresivo', 'Depresivo'), ('enojado', 'Enojado'), ('estresado', 'Estresado'), ('drogado', 'Bajo efecto de drogas'), ('discapacidad visual', 'Con discapacidad visible')], default='normal', max_length=100, null=True)),
                ('antiguedadvehiculo', models.CharField(blank=True, choices=[('-1', 'Menos de 1 año'), ('1-3', '1 a 3 años'), ('4-7', '4 a 7 años'), ('8-15', '8 a 15 años'), ('+15', 'Más de 15 años')], default='-1', max_length=100, null=True)),
                ('orientacion', models.CharField(blank=True, choices=[('norte', 'Norte'), ('sur', 'Sur'), ('este', 'Este'), ('oeste', 'Oeste'), ('noroeste', 'Noroeste'), ('noreste', 'Noreste'), ('suroeste', 'Suroeste'), ('sureste', 'Sureste')], default='sur', max_length=100, null=True)),
                ('semaforo', models.BooleanField(blank=True, default=False, null=True)),
                ('iluminacion', models.CharField(blank=True, choices=[('buena', 'Buena'), ('moderada', 'Moderada'), ('pobre', 'Pobre')], default='buena', max_length=100, null=True)),
                ('condicion_clima', models.CharField(blank=True, choices=[('despejado', 'Despejado'), ('parcialmente nublado', 'Parcialmente nublado'), ('nublado', 'Nublado'), ('lluvia_suave', 'Lluvia suave'), ('tormenta', 'Tormenta o lluvia fuerte'), ('niebla', 'Niebla / neblina'), ('viento_fuerte', 'Viento fuerte')], default='despejado', max_length=100, null=True)),
                ('nivel_trafico', models.CharField(blank=True, choices=[('fluido', 'Fluido'), ('moderado', 'Moderado'), ('congestionado', 'Congestionado'), ('detenido', 'Detenido')], default='fluido', max_length=100, null=True)),
                ('via_estado', models.CharField(blank=True, choices=[('buena', 'Buena'), ('regular', 'Regular'), ('mala', 'Mala')], default='buena', max_length=100, null=True)),
                ('tipo_superficie', models.CharField(blank=True, choices=[('pavimento', 'Pavimento rigido'), ('desgastado', 'Pavimento desgastado'), ('adoquines', 'Adoquines'), ('tierra', 'Tierra'), ('grava', 'Grava'), ('arena', 'Arena'), ('barro', 'Barro/Lodo'), ('resbaloso', 'Pavimento resbaloso')], default='pavimento', max_length=100, null=True)),
                ('geometria_via', models.CharField(blank=True, choices=[('recta', 'Recta'), ('curva_abierta', 'Curva abierta'), ('curva_cerrada', 'Curva cerrada'), ('multiples_curvas', 'Múltiples curvas / Zigzag'), ('desconoida', 'Desconocida')], default='recta', max_length=100, null=True)),
                ('pendiente_via', models.CharField(blank=True, choices=[('plana', 'Plana'), ('muy_alta', 'Subida pronunciada'), ('alta', 'Subida leve'), ('bajada', 'Bajada leve'), ('muy_bajada', 'Bajada pronunciada')], default='plana', max_length=100, null=True)),
                ('licencia', models.BooleanField(default=False)),
                ('tipo_vehiculo', models.CharField(blank=True, choices=[('carro', 'Carro'), ('motocicleta', 'Motocicleta'), ('camioneta', 'Camioneta'), ('buseta', 'Buseta'), ('bicicleta', 'Bicileta'), ('mototaxi', 'mototaxi'), ('otro', 'Otro')], default='carro', max_length=100, null=True)),
                ('uso_vehiculo', models.CharField(blank=True, choices=[('particular', 'Particular'), ('transporte_publico', 'Transporte público'), ('taxi', 'Taxi'), ('logistica', 'Carga / Logística'), ('escolar', 'Escolar'), ('emergencia', 'Emergencia'), ('institucional', 'Oficial / Institucional'), ('domiciliario', 'vehiculo de reparto / Mensajería'), ('turismo_o_especial', 'Turismo / Especial'), ('plataforma_digital', 'Plataforma digital'), ('aprendizaje', 'Aprendizaje / Escuela')], default='particular', max_length=100, null=True)),
                ('compania_aseguradora', models.BooleanField(blank=True, default=False, null=True)),
                ('nombre_aseguradora', models.CharField(blank=True, choices=[('allianz_seguros_sa', 'Allianz Seguros S.A.'), ('axa_colpatria_seguros_sa', 'AXA Colpatria Seguros S.A.'), ('qbe_seguros_sa', 'QBE Seguros S.A.'), ('compañia_mundial_seguros', 'Compañía Mundial de Seguros S.A.'), ('seguros_generales_suramericana', 'Seguros Generales Suramericana S.A.'), ('la_previsora_sa', 'La Previsora S.A. Compañía de Seguros'), ('mapfre_seguros_generales_colombia_sa', 'Mapfre Seguros Generales de Colombia S.A.'), ('seguros_comerciales_bolivar_sa', 'Seguros Comerciales Bolívar S.A.'), ('seguros_del_estado_sa', 'Seguros del Estado S.A.'), ('liberty_seguros_sa', 'Liberty Seguros S.A.'), ('cardif_colombia_seguros_generales_sa', 'Cardif Colombia Seguros Generales S.A.'), ('la_equidad_seguros_generales', 'La Equidad Seguros Generales Organismo Cooperativo'), ('aseguradora_solidaria_de_colombia', 'Aseguradora Solidaria de Colombia Ltda.'), ('sura_seguros', 'Sura Seguros (Seguros de Riesgos Laborales S.A.)'), ('chubb_seguros_colombia_sa', 'Chubb Seguros Colombia S.A.'), ('hdi_seguros_sa', 'HDI Seguros S.A.'), ('seguros_alfa_sa', 'Seguros Alfa S.A.'), ('seguros_confianza_sa', 'Seguros Confianza S.A.'), ('rsa_seguros_colombia_sa', 'RSA Seguros Colombia S.A.'), ('seguros_atlas_sa', 'Seguros Atlas S.A.'), ('positiva_seguros_sa', 'Positiva Compañía de Seguros S.A.'), ('aig_seguros_colombia_sa', 'AIG Seguros Colombia S.A.'), ('seguros_helm_sa', 'Seguros Helm S.A.'), ('seguros_del_hogar_sa', 'Seguros del Hogar S.A.'), ('seguros_colmena_sa', 'Seguros Colmena S.A.'), ('seguros_aurora_sa', 'Seguros Aurora S.A.'), ('bcR_seguros', 'BCR Seguros (Bancoldex)'), ('mundial_de_vida_sa', 'Mundial de Vida S.A.'), ('otro', 'otro'), ('N/A', 'No Aplica')], default='N/A', max_length=100, null=True)),
                ('danio_vehicular', models.CharField(blank=True, choices=[('ninguno', 'Ninguno'), ('muy_leve', 'Muy leve (Daños cosmeticos)'), ('leve', 'Leve (Daños menores)'), ('moderado', 'Moderado (Daños funcionales)'), ('grave', 'Grave (Daños estructurales mecanicos)'), ('perdida_total', 'Perdida total (Vehiculo irreparable)')], default='ninguno', max_length=100, null=True)),
                ('danio_persona', models.CharField(blank=True, choices=[('sin_lesion', 'Sin lesión'), ('leve', 'Leve (Contusiones menores, sin hospitalización)'), ('moderada', 'Moderada (Requiere atención médica sin riesgo vital)'), ('grave', 'Grave (Lesiones críticas o permanentes)')], default='sin_lesion', max_length=100, null=True)),
                ('presencia_defuego', models.BooleanField(blank=True, default=False, null=True)),
                ('conocimeinto_tenia', models.BooleanField(blank=True, default=False, null=True)),
                ('descripcion_bache', models.CharField(blank=True, choices=[('bache', 'bache normal'), ('grieta', 'Grieta alargada'), ('hundimiento', 'zona hundida'), ('parche_deteriorado', 'Parche deteriorado'), ('multiples', 'Varios baches en la misma zona'), ('cubierto', 'bache cubierto con material no adecuado'), ('tapa_alcantarilla', 'hueco por tapa de alcantarilla extraida'), ('bloque_concreto', 'hueco por bloque de concreto extraido')], default='bache', max_length=100, null=True)),
                ('encharcado', models.BooleanField(blank=True, default=False, null=True)),
                ('testigos', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('heridos', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('fallecidos', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('vehiculos_afectados', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('danios_ambiente', models.BooleanField(blank=True, default=False, null=True)),
                ('danios_infraestructura', models.BooleanField(blank=True, default=False, null=True)),
                ('servicio_policia', models.CharField(blank=True, choices=[('no_aplica', 'No_Aplica'), ('muy_deficiente', 'Muy deficiente'), ('deficiente', 'Deficiente'), ('aceptable', 'Aceptable'), ('bueno', 'Bueno'), ('excelente', 'Excelente')], default='no_aplica', max_length=100, null=True)),
                ('servicio_grua', models.CharField(blank=True, choices=[('no_aplica', 'No_Aplica'), ('muy_deficiente', 'Muy deficiente'), ('deficiente', 'Deficiente'), ('aceptable', 'Aceptable'), ('bueno', 'Bueno'), ('excelente', 'Excelente')], default='no_aplica', max_length=100, null=True)),
                ('servicio_aseguradora', models.CharField(blank=True, choices=[('no_aplica', 'No_Aplica'), ('muy_deficiente', 'Muy deficiente'), ('deficiente', 'Deficiente'), ('aceptable', 'Aceptable'), ('bueno', 'Bueno'), ('excelente', 'Excelente')], default='no_aplica', max_length=100, null=True)),
                ('servicio_abogados', models.CharField(blank=True, choices=[('no_aplica', 'No_Aplica'), ('muy_deficiente', 'Muy deficiente'), ('deficiente', 'Deficiente'), ('aceptable', 'Aceptable'), ('bueno', 'Bueno'), ('excelente', 'Excelente')], default='no_aplica', max_length=100, null=True)),
                ('servicio_bomberos', models.CharField(blank=True, choices=[('no_aplica', 'No_Aplica'), ('muy_deficiente', 'Muy deficiente'), ('deficiente', 'Deficiente'), ('aceptable', 'Aceptable'), ('bueno', 'Bueno'), ('excelente', 'Excelente')], default='no_aplica', max_length=100, null=True)),
                ('servicio_medicos', models.CharField(blank=True, choices=[('no_aplica', 'No_Aplica'), ('muy_deficiente', 'Muy deficiente'), ('deficiente', 'Deficiente'), ('aceptable', 'Aceptable'), ('bueno', 'Bueno'), ('excelente', 'Excelente')], default='no_aplica', max_length=100, null=True)),
                ('parte_policial', models.BooleanField(blank=True, default=False, null=True)),
                ('reclamo_formal', models.BooleanField(blank=True, default=False, null=True)),
                ('asesoria_gratis', models.BooleanField(blank=True, default=False, null=True)),
                ('satisfaccion', models.CharField(blank=True, choices=[('no_aplica', 'No_Aplica'), ('muy_deficiente', 'Muy deficiente'), ('deficiente', 'Deficiente'), ('aceptable', 'Aceptable'), ('bueno', 'Bueno'), ('excelente', 'Excelente')], default='no_aplica', max_length=100, null=True)),
                ('foto1', models.ImageField(blank=True, help_text='Suba una imagen clara del accidente (Formatos permitidos: JPG, JPEG, PNG)', null=True, upload_to='images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Fotografía del incidente')),
                ('foto2', models.ImageField(blank=True, null=True, upload_to='images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Fotografía del incidente 2')),
                ('foto3', models.ImageField(blank=True, null=True, upload_to='images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Fotografía del incidente 3')),
                ('bache', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reportes', to='bache.bache')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reportes', to='usuario.usuario')),
            ],
        ),
    ]
